# Generated by Django 3.0.4 on 2020-04-28 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, upload_to='profile_pics')),
                ('pic_added', models.DateTimeField(auto_now=True)),
                ('pic_updated_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(choices=[('Science & Tech', 'Science & Tech'), ('Politics', 'Politics'), ('Economics,Market,Taxes & Investments', 'Economics,Market,Taxes & Investments'), ('Literature', 'Literature'), ('Art & Culture', 'Art & Culture'), ('Law', 'Law'), ('Religions', 'Religions'), ('Cooking', 'Cooking'), ('Food', 'Food Items'), ('Fashion & Design', 'Fashion & Design'), ('Healthcare,Exercises & Medical', 'Healthcare,Exercises & Medical'), ('Games & Sports', 'Games & Sports'), ('Jokes', 'Jokes'), ('Beauty of Nature', 'Beauty of Nature'), ('Others', 'Others')], max_length=40)),
                ('content', models.TextField(blank=True)),
                ('video_clips', models.FileField(blank=True, upload_to='videos')),
                ('images', models.ImageField(blank=True, upload_to='images')),
                ('site_url', models.URLField(blank=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('dislike', models.ManyToManyField(blank=True, related_name='post_dislike', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(blank=True, related_name='post_like', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('video_clips', models.FileField(blank=True, upload_to='videos')),
                ('images', models.ImageField(blank=True, upload_to='images')),
                ('site_url', models.URLField(blank=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dislike', models.ManyToManyField(blank=True, related_name='commment_dislike', to=settings.AUTH_USER_MODEL)),
                ('like', models.ManyToManyField(blank=True, related_name='commment_like', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.Post')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='basic.Comment')),
            ],
        ),
        migrations.AddConstraint(
            model_name='comment',
            constraint=models.CheckConstraint(check=models.Q(('post', None), ('reply', None), _connector='OR'), name='at_least_1_null'),
        ),
    ]
